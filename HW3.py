
# #Задача 22: Даны два неупорядоченных набора целых чисел (может быть, с повторениями).
# #Выдать без повторений в порядке возрастания все те числа, которые встречаются в обоих наборах.
# #Пользователь вводит 2 числа. n — кол-во элементов первого множества. m — кол-во элементов второго множества.
# #Затем пользователь вводит сами элементы множеств.


# # n = int(input("Введите количество элементов первого множества: "))
# # m = int(input("Введите количество элементов второго множества: "))

# # set1 = set()
# # set2 = set()

# # print("Введите элементы первого множества:")
# # for _ in range(n):
# #     element = int(input())
# #     set1.add(element)

# # print("Введите элементы второго множества:")
# # for _ in range(m):
# #     element = int(input())
# #     set2.add(element)

# # intersection = sorted(list(set1.intersection(set2)))

# # print("Результат:")
# # for element in intersection:
# #     print(element)

# #  24: В фермерском хозяйстве в Карелии выращивают чернику. Она растёт на круглой грядке, причём кусты высажены только по окружности.
#  Таким образом, у каждого куста есть ровно два соседних. Всего на грядке растёт N кустов.
# # Эти кусты обладают разной урожайностью, поэтому ко времени сбора на них выросло различное число ягод — на i-ом кусте выросло ai ягод.
# # В этом фермерском хозяйстве внедрена система автоматического сбора черники. Эта система состоит из управляющего модуля и нескольких собирающих модулей. 
# # Собирающий модуль за один заход, находясь непосредственно перед некоторым кустом, собирает ягоды с этого куста и с двух соседних с ним.
# # Напишите программу для нахождения максимального числа ягод, которое может собрать за один заход собирающий модуль, находясь перед некоторым кустом заданной во входном файле грядки.

# # def maximum_berries(nums):
# #     n = len(nums)

# #     if n < 3:
# #         return 0

# #     # Случай 1: собирающий модуль находится между первым и последним кустом
# #     max_berries = sum(nums[:3])

# #     # Случай 2: собирающий модуль находится перед одним из кустов внутри грядки
# #     for i in range(1, n-1):
# #         curr_berries = nums[i] + nums[i-1] + nums[i+1]
# #         max_berries = max(max_berries, curr_berries)

# #     return max_berries
